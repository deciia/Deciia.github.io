{"title":"数组的用法2","slug":"course/数组的用法2","date":"2016-04-02T12:17:59.000Z","updated":"2017-04-22T13:45:29.324Z","comments":true,"path":"api/articles/course/数组的用法2.json","photos":[],"link":"","excerpt":"以下包含Accessors的用法仅适于GMS。","covers":null,"content":"<p>以下包含Accessors的用法仅适于GMS。</p>\n<a id=\"more\"></a>\n<h2 id=\"判断数组是一维还是二维\"><a href=\"#判断数组是一维还是二维\" class=\"headerlink\" title=\"判断数组是一维还是二维\"></a>判断数组是一维还是二维</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 一个二维数组</div><div class=\"line\">a[0,0] = 0;</div><div class=\"line\">a[1,1] = 1;</div><div class=\"line\">a[2,2] = 2;</div><div class=\"line\">a[3,3] = 3;</div><div class=\"line\">a[1,0] = 0;</div><div class=\"line\">a[1,1] = 1;</div><div class=\"line\">a[1,2] = 2;</div><div class=\"line\">a[1,3] = 3;</div><div class=\"line\"></div><div class=\"line\">show_debug_message(array_height_2d(a)); // 输出 2</div><div class=\"line\">show_debug_message(array_length_2d(a,0)); // 输出 4</div><div class=\"line\">show_debug_message(array_length_2d(a,1)); // 输出 4</div><div class=\"line\">show_debug_message(a); // 输出 &#123; &#123; 0,1,2,3 &#125;, &#123; 0,1,2,3 &#125;,  &#125;</div><div class=\"line\"></div><div class=\"line\">a = 0;</div><div class=\"line\">a[0,0] = 0;</div><div class=\"line\">a[0,1] = 1;</div><div class=\"line\">a[0,2] = 2;</div><div class=\"line\">a[1,0] = 0;</div><div class=\"line\">a[1,1] = 1;</div><div class=\"line\">a[1,2] = 2;</div><div class=\"line\">a[1,3] = 3;</div><div class=\"line\"></div><div class=\"line\">show_debug_message(array_height_2d(a)); // 输出 2</div><div class=\"line\">show_debug_message(array_length_2d(a,0)); // 输出 3</div><div class=\"line\">show_debug_message(array_length_2d(a,1)); // 输出 4</div><div class=\"line\">show_debug_message(a); // 输出 &#123; &#123; 0,1,2 &#125;, &#123; 0,1,2,3 &#125;,  &#125;</div></pre></td></tr></table></figure>\n<p>array_length_2d的官方文档这样说：</p>\n<blockquote>\n<p>The function will return 0 if the variable given is not an array or is a 1D array. 如果变量不是数组或者是一维数组，函数将返回0。</p>\n</blockquote>\n<p>这显然是错误的。array_length_2d只会返回{}中的一行的长度。测试发现，判定一维数组只需要 <code>(array_height_2d(a)=1</code> height小于1表示不是数组，一个值是否是数组也可以通过is_array(a)来判断。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (array_height_2d(a) = 1 </div><div class=\"line\">show_debug_message(&quot;a is 1D array&quot;);</div></pre></td></tr></table></figure>\n<p>以下是一个具体应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">///ArrayDefGetListValue(data,xpos,[2d_ypos,] vpos,index, defaultValue)</div><div class=\"line\">// 读取AyDefList定义数组的值</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\">(0,0)</div><div class=\"line\">.----------------------------------------&gt; xpos</div><div class=\"line\">|   .(xpos,ypos,vpos+0)---.--------&gt;</div><div class=\"line\">|   |                   (xpos,ypos,vpos+n) AyDefList</div><div class=\"line\">|   |</div><div class=\"line\">|   |</div><div class=\"line\">|   .(xpos,ypos+n,vpos)</div><div class=\"line\">|   |</div><div class=\"line\">|   V AyDef</div><div class=\"line\">V</div><div class=\"line\">ypos</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">var _d = argument[0];</div><div class=\"line\">if !is_array(_d) return argument[4]; // 不是数组直接返回默认值</div><div class=\"line\"></div><div class=\"line\">if (array_height_2d(_d) == 1) //1d array 判断是否一维数组</div><div class=\"line\">&#123;</div><div class=\"line\">    var _a = _d[@ argument[1]];</div><div class=\"line\">    if  is_array(_a) // 如果一维数组的值也是数组</div><div class=\"line\">        return  _a[@ argument[2]+argument[3]]; // 返回其指定索引的值</div><div class=\"line\">    else return argument[4]; //直接返回默认值   </div><div class=\"line\"></div><div class=\"line\">&#125;else // 2d array 判断是否二维数组 多使用一个参数</div><div class=\"line\">&#123;</div><div class=\"line\">    var _a = _d[@ argument[1],argument[2]];</div><div class=\"line\">    if is_array(_a) // 如果二维数组的值也是数组</div><div class=\"line\">    &#123;</div><div class=\"line\">        if (argument[3]+argument[4] &gt; array_length_1d(_a) - 1) // 索引大于数组长度，返回默认值</div><div class=\"line\">            return argument[5];</div><div class=\"line\">        return  _a[@ argument[3]+argument[4]];</div><div class=\"line\">    &#125; </div><div class=\"line\">        </div><div class=\"line\">    else return argument[5]; // 返回默认值</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"数组的Accessors用法\"><a href=\"#数组的Accessors用法\" class=\"headerlink\" title=\"数组的Accessors用法\"></a>数组的Accessors用法</h2><p>使用Accessors可以不需要返回值的情况下修改数组的指定索引的值。它可以用于以下情况：</p>\n<ul>\n<li>A物体中定义的数组在任何物体中调用，只需要调用一次</li>\n<li>作为脚本参数使用，使用Accessors方法</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">a = array(0,1,2); // 使用自定义的array函数构建一个包括0,1,2三个值的数构</div><div class=\"line\">show_debug_message( a[@ 6]); // 返回0</div><div class=\"line\"></div><div class=\"line\">a[@ 6] = 100;</div><div class=\"line\">show_debug_message(a[@ 6]); // 返回100</div><div class=\"line\"></div><div class=\"line\">///array_set_var(array,pos,value)</div><div class=\"line\">// 设置数组指定索引的值</div><div class=\"line\"></div><div class=\"line\">// array = array_set_var(array,pos,value);</div><div class=\"line\"></div><div class=\"line\">if is_array(argument0)</div><div class=\"line\">&#123;</div><div class=\"line\">    argument0[@ argument1] = argument2;</div><div class=\"line\">    // return argument0; // 无需返回值</div><div class=\"line\">    // 这里设置之后，其它地方调用这个数组获得的是已经更改的数组</div><div class=\"line\">&#125;else // 不是数组的情况</div><div class=\"line\">&#123;</div><div class=\"line\">    var _a;</div><div class=\"line\">    _a[argument1] = argument2;</div><div class=\"line\">    return _a; // 必须要返回 a = array_set_var(a,2,100);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"构建和编辑一维数组\"><a href=\"#构建和编辑一维数组\" class=\"headerlink\" title=\"构建和编辑一维数组\"></a>构建和编辑一维数组</h2><h5 id=\"构建数组\"><a href=\"#构建数组\" class=\"headerlink\" title=\"构建数组\"></a>构建数组</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">/// array(value1, value2, value_n...)</div><div class=\"line\">/*</div><div class=\"line\">    使用这个方法创建16个以下的数组，更长的数组可以更用其它的方法添加。</div><div class=\"line\">    ___________________________________</div><div class=\"line\">    </div><div class=\"line\">    // 比如</div><div class=\"line\">    var a = array(123, &quot;fox&quot;, 4.5 , &quot;ciberman&quot;, false);</div><div class=\"line\">    </div><div class=\"line\">    // 同于以下，但是更方便</div><div class=\"line\">    var a;</div><div class=\"line\">    a[0] = 123;</div><div class=\"line\">    a[1] = &quot;fox&quot;;</div><div class=\"line\">    a[2] = 4.5;</div><div class=\"line\">    a[3] = &quot;ciberman&quot;;</div><div class=\"line\">    a[4] = false;    </div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">var a;</div><div class=\"line\">for (var i=0;i&lt;argument_count;i++)&#123;</div><div class=\"line\">    a[i] =argument[i];</div><div class=\"line\">&#125;</div><div class=\"line\">return a;</div></pre></td></tr></table></figure>\n<h5 id=\"数组添加值\"><a href=\"#数组添加值\" class=\"headerlink\" title=\"数组添加值\"></a>数组添加值</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">/// array_add(array,value,...)</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\"></div><div class=\"line\">// 扩展数组的值，最多16个参数</div><div class=\"line\">// 如果不是数组则需要返回值</div><div class=\"line\">// 源代码 GMLscripts.com/license 的基础的的修改版</div><div class=\"line\"></div><div class=\"line\">names = array(&quot;Charlie&quot;,&quot;Juliett&quot;,&quot;Mike&quot;);</div><div class=\"line\">array_add(names, &quot;Oscar&quot;, &quot;Romeo&quot;, &quot;Victor&quot;);</div><div class=\"line\">show_debug_message(names); // &#123; &#123; Charlie,Juliett,Mike,Oscar,Romeo,Victor &#125;,  &#125;</div><div class=\"line\"></div><div class=\"line\">// 非数组</div><div class=\"line\">names = 0;</div><div class=\"line\">names = array_add(names, &quot;Oscar&quot;, &quot;Romeo&quot;, &quot;Victor&quot;);</div><div class=\"line\">show_debug_message(names); &#123; &#123; Oscar,Romeo,Victor &#125;,  &#125;</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">var r = argument[0];</div><div class=\"line\">var o = array_length_1d(r) - 1;</div><div class=\"line\">var i = argument_count;</div><div class=\"line\">if (is_array(r)) while (--i &gt; 0) r[@ o + i] = argument[i];</div><div class=\"line\">else while (--i &gt; 0) r[o + i] = argument[i];</div><div class=\"line\">return r;</div></pre></td></tr></table></figure>\n<h5 id=\"数组相接\"><a href=\"#数组相接\" class=\"headerlink\" title=\"数组相接\"></a>数组相接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">/// array_join( arr1, arr2);</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\">//将两个数组相接在一起，并返回相接后的值。</div><div class=\"line\">names1 = array(&quot;Charlie&quot;,&quot;Juliett&quot;,&quot;Mike&quot;);</div><div class=\"line\">names2 = array(&quot;Oscar&quot;, &quot;Romeo&quot;, &quot;Victor&quot;);</div><div class=\"line\">names1 = array_join(names1,names2);</div><div class=\"line\">show_debug_message(names1); //&#123; &#123; Charlie,Juliett,Mike,Oscar,Romeo,Victor &#125;,  &#125;</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">var _array1,_array2,_size1,_size2;</div><div class=\"line\"></div><div class=\"line\">_array1 = argument0;</div><div class=\"line\">_array2 = argument1;</div><div class=\"line\">_size1 = array_length_1d(_array1);</div><div class=\"line\">_size2 = array_length_1d(_array2);</div><div class=\"line\"></div><div class=\"line\">for(var i=0; i&lt;_size2;i++)&#123;</div><div class=\"line\">    _array1[_size1+i] = _array2[i];</div><div class=\"line\">&#125;</div><div class=\"line\">return _array1;</div></pre></td></tr></table></figure>\n<p>其它的用法还有，二维数组的定义，数组与列表，数组与字符串的转换，之后的日子会陆续讲到。</p>\n","categories":[{"name":"教程","slug":"教程","count":7,"path":"api/categories/教程.json"}],"tags":[{"name":"GMS教程","slug":"GMS教程","count":3,"path":"api/tags/GMS教程.json"}]}